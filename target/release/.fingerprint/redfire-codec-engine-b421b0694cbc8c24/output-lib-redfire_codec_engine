{"$message_type":"diagnostic","message":"unused variable: `cuda_device`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_annex_gpu.rs","byte_start":8907,"byte_end":8918,"line_start":309,"line_end":309,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"        let cuda_device: Option<Arc<()>> = None;","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_annex_gpu.rs","byte_start":8907,"byte_end":8918,"line_start":309,"line_end":309,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"        let cuda_device: Option<Arc<()>> = None;","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":"_cuda_device","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `cuda_device`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_annex_gpu.rs:309:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m309\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let cuda_device: Option<Arc<()>> = None;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_cuda_device`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `rocm_device`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_annex_gpu.rs","byte_start":8995,"byte_end":9006,"line_start":312,"line_end":312,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"        let rocm_device: Option<Arc<()>> = None;","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_annex_gpu.rs","byte_start":8995,"byte_end":9006,"line_start":312,"line_end":312,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"        let rocm_device: Option<Arc<()>> = None;","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":"_rocm_device","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `rocm_device`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_annex_gpu.rs:312:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m312\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let rocm_device: Option<Arc<()>> = None;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_rocm_device`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unreachable expression","code":{"code":"unreachable_code","explanation":null},"level":"warning","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_annex_gpu.rs","byte_start":10396,"byte_end":10402,"line_start":354,"line_end":354,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"        Ok(())","highlight_start":9,"highlight_end":15}],"label":"unreachable expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_annex_gpu.rs","byte_start":10000,"byte_end":10387,"line_start":343,"line_end":353,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        match self.config.gpu_config.backend {","highlight_start":9,"highlight_end":47},{"text":"            #[cfg(feature = \"cuda\")]","highlight_start":1,"highlight_end":37},{"text":"            GpuBackend::Cuda => {","highlight_start":1,"highlight_end":34},{"text":"                self.compile_cuda_kernels().await?;","highlight_start":1,"highlight_end":52},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            #[cfg(feature = \"rocm\")]","highlight_start":1,"highlight_end":37},{"text":"            GpuBackend::Rocm => {","highlight_start":1,"highlight_end":34},{"text":"                self.compile_rocm_kernels().await?;","highlight_start":1,"highlight_end":52},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            _ => return Err(anyhow!(\"Unsupported GPU backend\")),","highlight_start":1,"highlight_end":65},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":"any code following this `match` expression is unreachable, as all arms diverge","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unreachable_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable expression\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_annex_gpu.rs:354:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m343\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        match self.config.gpu_config.backend {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m344\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            #[cfg(feature = \"cuda\")]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m345\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            GpuBackend::Cuda => {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m346\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                self.compile_cuda_kernels().await?;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m352\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            _ => return Err(anyhow!(\"Unsupported GPU backend\")),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m353\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12many code following this `match` expression is unreachable, as all arms diverge\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m354\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        Ok(())\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munreachable expression\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unreachable_code)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `cng_state`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_annex_gpu.rs","byte_start":28710,"byte_end":28719,"line_start":836,"line_end":836,"column_start":48,"column_end":57,"is_primary":true,"text":[{"text":"    async fn gpu_generate_comfort_noise(&self, cng_state: &mut CngState) -> Result<Vec<f32>> {","highlight_start":48,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_annex_gpu.rs","byte_start":28710,"byte_end":28719,"line_start":836,"line_end":836,"column_start":48,"column_end":57,"is_primary":true,"text":[{"text":"    async fn gpu_generate_comfort_noise(&self, cng_state: &mut CngState) -> Result<Vec<f32>> {","highlight_start":48,"highlight_end":57}],"label":null,"suggested_replacement":"_cng_state","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `cng_state`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_annex_gpu.rs:836:48\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m836\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    async fn gpu_generate_comfort_noise(&self, cng_state: &mut CngState) -> Result<Vec<f32>> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_cng_state`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `gamma2`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs","byte_start":10926,"byte_end":10932,"line_start":317,"line_end":317,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"        let gamma2: f32 = 0.6;","highlight_start":13,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs","byte_start":10926,"byte_end":10932,"line_start":317,"line_end":317,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"        let gamma2: f32 = 0.6;","highlight_start":13,"highlight_end":19}],"label":null,"suggested_replacement":"_gamma2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `gamma2`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs:317:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m317\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let gamma2: f32 = 0.6;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_gamma2`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `max_criterion`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs","byte_start":13068,"byte_end":13081,"line_start":383,"line_end":383,"column_start":17,"column_end":30,"is_primary":true,"text":[{"text":"        let mut max_criterion = -1e10;","highlight_start":17,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs","byte_start":13068,"byte_end":13081,"line_start":383,"line_end":383,"column_start":17,"column_end":30,"is_primary":true,"text":[{"text":"        let mut max_criterion = -1e10;","highlight_start":17,"highlight_end":30}],"label":null,"suggested_replacement":"_max_criterion","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `max_criterion`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs:383:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m383\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut max_criterion = -1e10;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_max_criterion`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `pitch_delay`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs","byte_start":12579,"byte_end":12590,"line_start":371,"line_end":371,"column_start":53,"column_end":64,"is_primary":true,"text":[{"text":"    fn fixed_codebook_search(&self, target: &[f32], pitch_delay: usize) -> (usize, f32) {","highlight_start":53,"highlight_end":64}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs","byte_start":12579,"byte_end":12590,"line_start":371,"line_end":371,"column_start":53,"column_end":64,"is_primary":true,"text":[{"text":"    fn fixed_codebook_search(&self, target: &[f32], pitch_delay: usize) -> (usize, f32) {","highlight_start":53,"highlight_end":64}],"label":null,"suggested_replacement":"_pitch_delay","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `pitch_delay`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs:371:53\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m371\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn fixed_codebook_search(&self, target: &[f32], pitch_delay: usize) -> (usize, f32) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_pitch_delay`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs","byte_start":13064,"byte_end":13081,"line_start":383,"line_end":383,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"        let mut max_criterion = -1e10;","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_mut)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs","byte_start":13064,"byte_end":13068,"line_start":383,"line_end":383,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        let mut max_criterion = -1e10;","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs:383:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m383\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut max_criterion = -1e10;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_mut)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `idx1`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs","byte_start":22057,"byte_end":22061,"line_start":650,"line_end":650,"column_start":26,"column_end":30,"is_primary":true,"text":[{"text":"    fn decode_lsp(&self, idx1: usize, idx2: usize, idx3: usize, idx4: usize) -> Vec<f32> {","highlight_start":26,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs","byte_start":22057,"byte_end":22061,"line_start":650,"line_end":650,"column_start":26,"column_end":30,"is_primary":true,"text":[{"text":"    fn decode_lsp(&self, idx1: usize, idx2: usize, idx3: usize, idx4: usize) -> Vec<f32> {","highlight_start":26,"highlight_end":30}],"label":null,"suggested_replacement":"_idx1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `idx1`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs:650:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m650\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn decode_lsp(&self, idx1: usize, idx2: usize, idx3: usize, idx4: usize) -> Vec<f32> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_idx1`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `idx2`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs","byte_start":22070,"byte_end":22074,"line_start":650,"line_end":650,"column_start":39,"column_end":43,"is_primary":true,"text":[{"text":"    fn decode_lsp(&self, idx1: usize, idx2: usize, idx3: usize, idx4: usize) -> Vec<f32> {","highlight_start":39,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs","byte_start":22070,"byte_end":22074,"line_start":650,"line_end":650,"column_start":39,"column_end":43,"is_primary":true,"text":[{"text":"    fn decode_lsp(&self, idx1: usize, idx2: usize, idx3: usize, idx4: usize) -> Vec<f32> {","highlight_start":39,"highlight_end":43}],"label":null,"suggested_replacement":"_idx2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `idx2`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs:650:39\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m650\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn decode_lsp(&self, idx1: usize, idx2: usize, idx3: usize, idx4: usize) -> Vec<f32> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_idx2`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `idx3`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs","byte_start":22083,"byte_end":22087,"line_start":650,"line_end":650,"column_start":52,"column_end":56,"is_primary":true,"text":[{"text":"    fn decode_lsp(&self, idx1: usize, idx2: usize, idx3: usize, idx4: usize) -> Vec<f32> {","highlight_start":52,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs","byte_start":22083,"byte_end":22087,"line_start":650,"line_end":650,"column_start":52,"column_end":56,"is_primary":true,"text":[{"text":"    fn decode_lsp(&self, idx1: usize, idx2: usize, idx3: usize, idx4: usize) -> Vec<f32> {","highlight_start":52,"highlight_end":56}],"label":null,"suggested_replacement":"_idx3","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `idx3`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs:650:52\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m650\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn decode_lsp(&self, idx1: usize, idx2: usize, idx3: usize, idx4: usize) -> Vec<f32> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_idx3`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `idx4`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs","byte_start":22096,"byte_end":22100,"line_start":650,"line_end":650,"column_start":65,"column_end":69,"is_primary":true,"text":[{"text":"    fn decode_lsp(&self, idx1: usize, idx2: usize, idx3: usize, idx4: usize) -> Vec<f32> {","highlight_start":65,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs","byte_start":22096,"byte_end":22100,"line_start":650,"line_end":650,"column_start":65,"column_end":69,"is_primary":true,"text":[{"text":"    fn decode_lsp(&self, idx1: usize, idx2: usize, idx3: usize, idx4: usize) -> Vec<f32> {","highlight_start":65,"highlight_end":69}],"label":null,"suggested_replacement":"_idx4","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `idx4`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs:650:65\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m650\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn decode_lsp(&self, idx1: usize, idx2: usize, idx3: usize, idx4: usize) -> Vec<f32> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_idx4`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `lsp`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs","byte_start":22400,"byte_end":22403,"line_start":662,"line_end":662,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"    fn lsp_to_lp(&self, lsp: &[f32]) -> Vec<f32> {","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs","byte_start":22400,"byte_end":22403,"line_start":662,"line_end":662,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"    fn lsp_to_lp(&self, lsp: &[f32]) -> Vec<f32> {","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"_lsp","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `lsp`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs:662:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m662\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn lsp_to_lp(&self, lsp: &[f32]) -> Vec<f32> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_lsp`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `gamma2`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g7222_acelp.rs","byte_start":13012,"byte_end":13018,"line_start":388,"line_end":388,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"        let gamma2 = 0.7;","highlight_start":13,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g7222_acelp.rs","byte_start":13012,"byte_end":13018,"line_start":388,"line_end":388,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"        let gamma2 = 0.7;","highlight_start":13,"highlight_end":19}],"label":null,"suggested_replacement":"_gamma2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `gamma2`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/justin/projects/redfire-switch/redfire-codec-engine/src/g7222_acelp.rs:388:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m388\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let gamma2 = 0.7;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_gamma2`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `track_length`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g7222_acelp.rs","byte_start":15429,"byte_end":15441,"line_start":458,"line_end":458,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"        let track_length = L_SUBFR_WB / num_pulses;","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g7222_acelp.rs","byte_start":15429,"byte_end":15441,"line_start":458,"line_end":458,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"        let track_length = L_SUBFR_WB / num_pulses;","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":"_track_length","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `track_length`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/justin/projects/redfire-switch/redfire-codec-engine/src/g7222_acelp.rs:458:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m458\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let track_length = L_SUBFR_WB / num_pulses;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_track_length`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `corr_neg`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g7222_acelp.rs","byte_start":15934,"byte_end":15942,"line_start":470,"line_end":470,"column_start":21,"column_end":29,"is_primary":true,"text":[{"text":"                let corr_neg = -target[pos];","highlight_start":21,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g7222_acelp.rs","byte_start":15934,"byte_end":15942,"line_start":470,"line_end":470,"column_start":21,"column_end":29,"is_primary":true,"text":[{"text":"                let corr_neg = -target[pos];","highlight_start":21,"highlight_end":29}],"label":null,"suggested_replacement":"_corr_neg","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `corr_neg`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/justin/projects/redfire-switch/redfire-codec-engine/src/g7222_acelp.rs:470:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m470\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let corr_neg = -target[pos];\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_corr_neg`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `pitch_delay`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g7222_acelp.rs","byte_start":15048,"byte_end":15059,"line_start":449,"line_end":449,"column_start":53,"column_end":64,"is_primary":true,"text":[{"text":"    fn acelp_codebook_search(&self, target: &[f32], pitch_delay: usize) -> (Vec<usize>, f32) {","highlight_start":53,"highlight_end":64}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g7222_acelp.rs","byte_start":15048,"byte_end":15059,"line_start":449,"line_end":449,"column_start":53,"column_end":64,"is_primary":true,"text":[{"text":"    fn acelp_codebook_search(&self, target: &[f32], pitch_delay: usize) -> (Vec<usize>, f32) {","highlight_start":53,"highlight_end":64}],"label":null,"suggested_replacement":"_pitch_delay","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `pitch_delay`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/justin/projects/redfire-switch/redfire-codec-engine/src/g7222_acelp.rs:449:53\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m449\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn acelp_codebook_search(&self, target: &[f32], pitch_delay: usize) -> (Vec<usize>, f32) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_pitch_delay`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `isp`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g7222_acelp.rs","byte_start":24206,"byte_end":24209,"line_start":722,"line_end":722,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"    fn isp_to_lp(&self, isp: &[f32]) -> Vec<f32> {","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g7222_acelp.rs","byte_start":24206,"byte_end":24209,"line_start":722,"line_end":722,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"    fn isp_to_lp(&self, isp: &[f32]) -> Vec<f32> {","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"_isp","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `isp`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/justin/projects/redfire-switch/redfire-codec-engine/src/g7222_acelp.rs:722:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m722\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn isp_to_lp(&self, isp: &[f32]) -> Vec<f32> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_isp`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/lib.rs","byte_start":3450,"byte_end":3462,"line_start":124,"line_end":124,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"    let mut backends = Vec::new();","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/lib.rs","byte_start":3450,"byte_end":3454,"line_start":124,"line_end":124,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut backends = Vec::new();","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/justin/projects/redfire-switch/redfire-codec-engine/src/lib.rs:124:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m124\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut backends = Vec::new();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"field `channels` is never read","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/codec.rs","byte_start":16615,"byte_end":16624,"line_start":502,"line_end":502,"column_start":12,"column_end":21,"is_primary":false,"text":[{"text":"pub struct OpusCodec {","highlight_start":12,"highlight_end":21}],"label":"field in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/codec.rs","byte_start":16653,"byte_end":16661,"line_start":504,"line_end":504,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    channels: u8,","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: field `channels` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/justin/projects/redfire-switch/redfire-codec-engine/src/codec.rs:504:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m502\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct OpusCodec {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfield in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m503\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    sample_rate: u32,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m504\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    channels: u8,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `can_use_gpu_for_transcoding` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/codec.rs","byte_start":20490,"byte_end":20507,"line_start":616,"line_end":616,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"impl CodecService {","highlight_start":1,"highlight_end":18}],"label":"method in this implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/codec.rs","byte_start":26715,"byte_end":26742,"line_start":779,"line_end":779,"column_start":8,"column_end":35,"is_primary":true,"text":[{"text":"    fn can_use_gpu_for_transcoding(&self, from_codec: AudioCodec, to_codec: AudioCodec) -> bool {","highlight_start":8,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `can_use_gpu_for_transcoding` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/justin/projects/redfire-switch/redfire-codec-engine/src/codec.rs:779:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m616\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl CodecService {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmethod in this implementation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m779\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn can_use_gpu_for_transcoding(&self, from_codec: AudioCodec, to_codec: AudioCodec) -> bool {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"field `lowpass_filter` is never read","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/audio_resampler.rs","byte_start":2963,"byte_end":2977,"line_start":102,"line_end":102,"column_start":12,"column_end":26,"is_primary":false,"text":[{"text":"pub struct AudioResampler {","highlight_start":12,"highlight_end":26}],"label":"field in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/audio_resampler.rs","byte_start":3118,"byte_end":3132,"line_start":107,"line_end":107,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    lowpass_filter: Vec<f64>,","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: field `lowpass_filter` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/justin/projects/redfire-switch/redfire-codec-engine/src/audio_resampler.rs:107:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct AudioResampler {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfield in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m107\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    lowpass_filter: Vec<f64>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"fields `refl_coeff` and `lp_coeff` are never read","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_codec.rs","byte_start":539,"byte_end":548,"line_start":17,"line_end":17,"column_start":12,"column_end":21,"is_primary":false,"text":[{"text":"pub struct G729Codec {","highlight_start":12,"highlight_end":21}],"label":"fields in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_codec.rs","byte_start":907,"byte_end":917,"line_start":29,"line_end":29,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    refl_coeff: [f32; 10],","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_codec.rs","byte_start":973,"byte_end":981,"line_start":31,"line_end":31,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    lp_coeff: [f32; 11],","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`G729Codec` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: fields `refl_coeff` and `lp_coeff` are never read\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_codec.rs:29:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct G729Codec {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfields in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    refl_coeff: [f32; 10],\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// Linear prediction coefficients\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    lp_coeff: [f32; 11],\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `G729Codec` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"multiple fields are never read","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs","byte_start":1022,"byte_end":1033,"line_start":27,"line_end":27,"column_start":12,"column_end":23,"is_primary":false,"text":[{"text":"pub struct G729Encoder {","highlight_start":12,"highlight_end":23}],"label":"fields in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs","byte_start":1200,"byte_end":1207,"line_start":31,"line_end":31,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    old_wsp: Vec<f32>,                 // Weighted speech buffer","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs","byte_start":1448,"byte_end":1453,"line_start":38,"line_end":38,"column_start":5,"column_end":10,"is_primary":true,"text":[{"text":"    mem_w: Vec<f32>,                   // Error weighting filter memory","highlight_start":5,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs","byte_start":1520,"byte_end":1526,"line_start":39,"line_end":39,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    mem_w0: Vec<f32>,                  // Error weighting filter memory","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs","byte_start":1592,"byte_end":1600,"line_start":40,"line_end":40,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    mem_zero: Vec<f32>,                // Zero filter memory","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs","byte_start":1653,"byte_end":1658,"line_start":41,"line_end":41,"column_start":5,"column_end":10,"is_primary":true,"text":[{"text":"    sharp: f32,                        // Sharpening factor","highlight_start":5,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs","byte_start":1731,"byte_end":1742,"line_start":44,"line_end":44,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    past_qua_en: Vec<f32>,             // Past quantized energies","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs","byte_start":1905,"byte_end":1920,"line_start":50,"line_end":50,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    sid_frame_count: i32,","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs","byte_start":1957,"byte_end":1965,"line_start":53,"line_end":53,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    sid_gain: f32,","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs","byte_start":1976,"byte_end":1984,"line_start":54,"line_end":54,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    cur_gain: f32,","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs","byte_start":1995,"byte_end":2013,"line_start":55,"line_end":55,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"    sid_update_counter: i32,","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: multiple fields are never read\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_celp.rs:31:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct G729Encoder {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfields in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    old_wsp: Vec<f32>,                 // Weighted speech buffer\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mem_w: Vec<f32>,                   // Error weighting filter memory\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mem_w0: Vec<f32>,                  // Error weighting filter memory\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mem_zero: Vec<f32>,                // Zero filter memory\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    sharp: f32,                        // Sharpening factor\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    past_qua_en: Vec<f32>,             // Past quantized energies\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    sid_frame_count: i32,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    sid_gain: f32,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    cur_gain: f32,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    sid_update_counter: i32,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"field `kernels` is never read","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_annex_gpu.rs","byte_start":7044,"byte_end":7065,"line_start":260,"line_end":260,"column_start":12,"column_end":33,"is_primary":false,"text":[{"text":"pub struct G729AnnexGpuProcessor {","highlight_start":12,"highlight_end":33}],"label":"field in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_annex_gpu.rs","byte_start":7271,"byte_end":7278,"line_start":267,"line_end":267,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    kernels: Arc<RwLock<GpuKernels>>,","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: field `kernels` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_annex_gpu.rs:267:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct G729AnnexGpuProcessor {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfield in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m267\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    kernels: Arc<RwLock<GpuKernels>>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `make_vad_decision` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_annex_gpu.rs","byte_start":7947,"byte_end":7973,"line_start":287,"line_end":287,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"impl G729AnnexGpuProcessor {","highlight_start":1,"highlight_end":27}],"label":"method in this implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_annex_gpu.rs","byte_start":23707,"byte_end":23724,"line_start":700,"line_end":700,"column_start":8,"column_end":25,"is_primary":true,"text":[{"text":"    fn make_vad_decision(","highlight_start":8,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `make_vad_decision` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/justin/projects/redfire-switch/redfire-codec-engine/src/g729_annex_gpu.rs:700:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m287\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl G729AnnexGpuProcessor {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmethod in this implementation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m700\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn make_vad_decision(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"fields `old_wsp`, `mem_syn`, `mem_w`, `mem_deemph`, and `past_qua_en` are never read","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g7222_acelp.rs","byte_start":2563,"byte_end":2575,"line_start":75,"line_end":75,"column_start":12,"column_end":24,"is_primary":false,"text":[{"text":"pub struct G7222Encoder {","highlight_start":12,"highlight_end":24}],"label":"fields in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g7222_acelp.rs","byte_start":2742,"byte_end":2749,"line_start":79,"line_end":79,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    old_wsp: Vec<f32>,                 // Weighted speech buffer","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g7222_acelp.rs","byte_start":3040,"byte_end":3047,"line_start":86,"line_end":86,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    mem_syn: Vec<f32>,                 // Synthesis filter memory","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g7222_acelp.rs","byte_start":3106,"byte_end":3111,"line_start":87,"line_end":87,"column_start":5,"column_end":10,"is_primary":true,"text":[{"text":"    mem_w: Vec<f32>,                   // Weighting filter memory","highlight_start":5,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g7222_acelp.rs","byte_start":3172,"byte_end":3182,"line_start":88,"line_end":88,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    mem_deemph: f32,                   // De-emphasis memory","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g7222_acelp.rs","byte_start":3251,"byte_end":3262,"line_start":91,"line_end":91,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    past_qua_en: Vec<f32>,             // Past quantized energies","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: fields `old_wsp`, `mem_syn`, `mem_w`, `mem_deemph`, and `past_qua_en` are never read\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/justin/projects/redfire-switch/redfire-codec-engine/src/g7222_acelp.rs:79:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m75\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct G7222Encoder {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfields in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m79\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    old_wsp: Vec<f32>,                 // Weighted speech buffer\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mem_syn: Vec<f32>,                 // Synthesis filter memory\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m87\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mem_w: Vec<f32>,                   // Weighting filter memory\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mem_deemph: f32,                   // De-emphasis memory\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m91\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    past_qua_en: Vec<f32>,             // Past quantized energies\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"field `mem_hp_out` is never read","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g7222_acelp.rs","byte_start":20204,"byte_end":20216,"line_start":591,"line_end":591,"column_start":12,"column_end":24,"is_primary":false,"text":[{"text":"pub struct G7222Decoder {","highlight_start":12,"highlight_end":24}],"label":"field in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/justin/projects/redfire-switch/redfire-codec-engine/src/g7222_acelp.rs","byte_start":20379,"byte_end":20389,"line_start":599,"line_end":599,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    mem_hp_out: Vec<f32>,","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: field `mem_hp_out` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/justin/projects/redfire-switch/redfire-codec-engine/src/g7222_acelp.rs:599:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m591\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct G7222Decoder {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfield in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m599\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mem_hp_out: Vec<f32>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"28 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 28 warnings emitted\u001b[0m\n\n"}
