# Basic Redfire Gateway Configuration
# This is a minimal configuration for getting started with Redfire Gateway
# For production deployments, see production-gateway.toml

[general]
node_id = "redfire-gateway-basic"
description = "Basic TDMoE to SIP Gateway"
location = "Development Environment"
contact = "admin@example.com"
max_calls = 100
call_timeout = 300

[tdmoe]
interface = "eth0"
channels = 30
mtu = 1500
qos_dscp = 46

[e1]
interface = "span1"
framing = "crc4"           # CRC4 or no-crc4
line_code = "hdb3"         # HDB3 or AMI
clock_source = "external"  # external, internal, recovered
time_slots = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]
channel_associated = false

[sip]
listen_port = 5060
domain = "gateway.local"
transport = "udp"          # udp, tcp, tls
max_sessions = 50
session_timeout = 300
register_interval = 3600

[rtp]
port_range = { min = 10000, max = 10100 }
jitter_buffer_size = 50
packet_timeout = 1000

[pri]
variant = "etsi"           # etsi, ni2, ansi
layer1 = "e1"             # e1, t1
time_slots = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]
switch_type = "euroISDN"
network_specific = false
point_to_point = false

[trunk.codec]
allowed_codecs = ["g711a", "g711u"]
preferred_codec = "g711a"

[trunk.codec.dtmf]
method = "rfc2833"         # rfc2833, sip_info, inband
payload_type = 101
duration = 100
volume = -10
inter_digit_delay = 50

[b2bua]
enabled = true
max_concurrent_calls = 50
call_timeout = 300
media_timeout = 60
enable_media_relay = true
enable_codec_transcoding = false  # Set to true when external transcoding library is integrated
transcoding_backend = "auto"      # cpu, simd, simd-avx2, simd-avx512, cuda, rocm, gpu, auto

# SIMD acceleration settings (basic configuration)
enable_simd = true
auto_detect_simd = true          # Auto-detect best available SIMD instruction set
simd_fallback = true            # Fallback to CPU if SIMD fails

# GPU acceleration settings (basic configuration)
enable_gpu = true
auto_detect_gpu = true          # Auto-detect GPU backend (CUDA/ROCm)
gpu_fallback = true            # Fallback to SIMD/CPU if GPU fails

# Basic routing rules
[[b2bua.routing_table]]
id = "emergency"
pattern = "^(911|112)$"
route_type = "emergency"
target = "emergency.psap.local"
priority = 1
codec_preference = ["g711u"]

[[b2bua.routing_table]]
id = "local"
pattern = "^[2-9][0-9]{3}$"
route_type = "direct"
target = "localhost"
priority = 10
codec_preference = ["g711a", "g711u"]

[performance]
enabled = true
interval = 30
history_size = 100

[logging]
level = "info"
file = "/var/log/redfire-gateway.log"
max_size = 104857600  # 100MB
max_files = 5
format = "json"

[snmp]
enabled = false
community = "public"
port = 161
bind_address = "0.0.0.0"
version = "v2c"

[testing]
[testing.loopback]
enabled = true
timeout = 10000
max_concurrent = 5

[testing.bert]
enabled = true
patterns = ["prbs_15", "prbs_23"]
default_duration = 60
error_threshold = 0.001